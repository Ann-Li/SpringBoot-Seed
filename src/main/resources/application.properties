# beta1
#server.port=8080
#
#
## springboot 配置 druid 连接池
#spring.datasource.name=test
#spring.datasource.url=jdbc://mysql//127.0.0.1:3306/springboot?Unicode=true&characterEncoding=utf8mb4
#spring.datasource.username=root
#spring.datasource.password=735626035
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#
## 下面为连接池的补充设置，应用到上面所有数据源中
## 初始化大小，最小，最大
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
## 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
#spring.datasource.validationQuery=SELECT 'x'
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#spring.datasource.maxOpenPreparedStatements=20
#spring.datasource.logSlowSql=true
#
##为实体对象所在的包，跟数据库表一一对应
#mybatis.typeAliasesPackage=com.coder.springbootdomecollection.SpringBoot-Mybatis.Model

#设置TomCat
#端口
server.port=8080
#编码
server.tomcat.uri-encoding=UTF-8
#日志路径
logging.path=D:\\log
#Tomcat 压缩
server.tomcat.comperssion=on
# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName =com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8mb4&zeroDateTimeBehavior=convertToNull&useSSL=true
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&character_set_server=utf8mb4
spring.datasource.username=root
spring.datasource.password=735626035
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true
# 设置 utf-8mb4
spring.datasource.tomcat.init-s-q-l=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci

#pagehelper分页插件
pagehelper.helperDialect: mysql
pagehelper.reasonable: true
pagehelper.supportMethodsArguments: true
pagehelper.params: countSql

mybatis.mapper-locations=classpath*:/mapping/*.xml
mybatis.type-aliases-package=com.coder.springbootdomecollection.model

spring.thymeleaf.cache=false
spring.freemarker.cache=false
spring.groovy.template.cache=false
spring.velocity.cache=false

# MongoDB
spring.data.mongodb.uri=mongodb://localhost:54254/SpringBootMongoDB

# ZookeeperController
spring.application.name = zookeeper

# activemq 老版本  不使用连接池
#spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.user=admin
#spring.activemq.password=admin
#spring.activemq.in-memory=true
#spring.activemq.pool.enabled=false


#activemq 新版本 使用连接池
spring.activemq.broker-url=tcp://127.0.0.1:61616
spring.activemq.user=admin
spring.activemq.password=admin
spring.activemq.in-memory=false
#true表示使用连接池
spring.activemq.pool.enabled=true
#连接池最大连接数
spring.activemq.pool.max-connections=5
#空闲的连接过期时间，默认为30秒
spring.activemq.pool.idle-timeout=30000
# 强制的连接过期时间，与idleTimeout的区别在于：idleTimeout是在连接空闲一段时间失效，
# 而expiryTimeout不管当前连接的情况，只要达到指定时间就失效。默认为0，never
spring.activemq.pool.expiry-timeout=0
#默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置,两个都使用不知道配不配以下的东西，待测试
spring.jms.pub-sub-domain=true