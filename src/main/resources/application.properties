# beta1
#server.port=8080
#
#
## springboot 配置 druid 连接池
#spring.datasource.name=test
#spring.datasource.url=jdbc://mysql//127.0.0.1:3306/springboot?Unicode=true&characterEncoding=utf8mb4
#spring.datasource.username=root
#spring.datasource.password=735626035
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#
## 下面为连接池的补充设置，应用到上面所有数据源中
## 初始化大小，最小，最大
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
## 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
#spring.datasource.validationQuery=SELECT 'x'
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#spring.datasource.maxOpenPreparedStatements=20
#spring.datasource.logSlowSql=true
#
##为实体对象所在的包，跟数据库表一一对应
#mybatis.typeAliasesPackage=com.coder.springbootdomecollection.SpringBoot-Mybatis.Model

#设置TomCat
#端口
server.port=8080
#编码
server.tomcat.uri-encoding=UTF-8
#日志路径
logging.path=D:\\log
#Tomcat 压缩
server.tomcat.comperssion=on
# 数据库访问配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName =com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8mb4&zeroDateTimeBehavior=convertToNull&useSSL=true
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&character_set_server=utf8mb4
spring.datasource.username=root
spring.datasource.password=735626035
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true
# 设置 utf-8mb4
spring.datasource.tomcat.init-s-q-l=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci

#pagehelper分页插件
pagehelper.helperDialect: mysql
pagehelper.reasonable: true
pagehelper.supportMethodsArguments: true
pagehelper.params: countSql

mybatis.mapper-locations=classpath*:/mapping/*.xml
mybatis.type-aliases-package=com.coder.springbootdomecollection.model

spring.thymeleaf.cache=false
spring.freemarker.cache=false
spring.groovy.template.cache=false
spring.velocity.cache=false

# MongoDB
spring.data.mongodb.uri=mongodb://localhost:54254/SpringBootMongoDB

# ZookeeperController
spring.application.name = zookeeper


## Dubbo
## Spring boot application
#spring.application.name = dubbo-provider-demo
#management.port = 8081
#
## Base packages to scan Dubbo Components (e.g., @Service, @Reference)
#dubbo.scan.basePackages  = com.alibaba.boot.dubbo.demo.provider.service
#
## Dubbo Config properties
### ApplicationConfig Bean
#dubbo.application.id = dubbo-provider-demo
#dubbo.application.name = dubbo-provider-demo
#
### ProtocolConfig Bean
#dubbo.protocol.id = dubbo
#dubbo.protocol.name = dubbo
#dubbo.protocol.port = 52222
#
### RegistryConfig Bean
#dubbo.registry.id = my-registry
#dubbo.registry.address = N/A
#
#
## Dubbo 消费端
## Spring boot application
#spring.application.name = dubbo-provider-demo
#
## Dubbo Config properties
### ApplicationConfig Bean
#dubbo.application.id = dubbo-consumer-demo
#dubbo.application.name = dubbo-consumer-demo
#
### ProtocolConfig Bean
#dubbo.protocol.id = dubbo
#dubbo.protocol.name = dubbo
#dubbo.protocol.port = 12345

#redis
# Redis服务器地址
#spring.redis.hostname=127.0.0.1
## Redis服务器连接端口
#spring.redis.port=6379
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.maxActive=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.maxWait=-1
## 连接池中的最大空闲连接
#spring.redis.pool.maxIdle=8
## 连接池中的最小空闲连接
#spring.redis.pool.minIdle=0
## 连接超时时间（毫秒）
#spring.redis.timeout=6000
## Redis数据库索引（默认为0）
#spring.redis.database=0
## Redis服务器连接密码（默认为空）
#spring.redis.password=